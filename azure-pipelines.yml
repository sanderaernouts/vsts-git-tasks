
trigger:
  branches:
    include:
    - 'master'
    - 'hotfix/*'

pr:
  autoCancel: 'true'
  branches:
    include:
    - 'master'
stages:
- stage: build
  displayName: 'Build'
  jobs:
  - job: 'compile'
    displayName: 'Compile extension'
    pool:
      vmImage: 'ubuntu-20.04'
    continueOnError: 'true'
    steps:
    - powershell: |
        $v = Get-Content .\version.json | ConvertFrom-Json | select -first 1
        $version = ("{0}.{1}.{2}" -f $v.major, $v.minor, $env:BUILD_BUILDID)
        echo "##vso[build.updatebuildnumber]$version"
      displayName: 'set version'
      errorActionPreference: stop
    - task: NodeTool@0
      inputs:
        versionSpec: '9.x'

    - task: Npm@1
      displayName: 'npm install: root'
      inputs:
        command: install

    - task: Npm@1
      displayName: 'npm install: createpullrequest'
      inputs:
        command: install
        workingDir: createpullrequest

    - task: Npm@1
      displayName: 'npm run compile'
      inputs:
        command: custom
        verbose: false
        customCommand: 'run compile'

    - task: Npm@1
      displayName: 'npm prune: root'
      inputs:
        command: custom
        verbose: false
        customCommand: 'prune --production'

    - task: Npm@1
      displayName: 'npm prune: createpullrequest'
      inputs:
        command: custom
        verbose: false
        customCommand: 'prune --production'
        workingDir: createpullrequest

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        Contents: |
          **/*
          !.git/**/*
          !.git*
          !azure-pipelines.yml
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishPipelineArtifact@0
      displayName: 'Publish Artifact: drop'
      inputs:
          artifactName: 'drop'
          targetPath: '$(Build.ArtifactStagingDirectory)'